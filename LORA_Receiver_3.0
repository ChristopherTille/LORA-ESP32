// import libraries
#include <WiFi.h>
#include <HTTPClient.h>
#include <LoRa.h>
#include <SPI.h>
#include <Wire.h>
#include <BH1750.h>
#include "DHT.h"     

#define ss 18
#define rst 14
#define dio0 26

const char * ssid = "CCH-Hezler"; /* set WIFI id */
const char * password = "PK743hdtxnBFH%28mkj37!RCVux94,KSU"; /* set WIFI password */

String GOOGLE_SCRIPT_ID = "AKfycbxPEDvnBCX7IjHfG7BB3TsWr4niGvzJVREUqMHjnPxLJmMByLoBkBo1kIkVMfJhtn5RCA"; /* set id of Google Script */
const int sendInterval = 3; 

//updated 04.12.2019
const char * root_ca=\
"-----BEGIN CERTIFICATE-----\n" \
"MIIDujCCAqKgAwIBAgILBAAAAAABD4Ym5g0wDQYJKoZIhvcNAQEFBQAwTDEgMB4G\n" \
"A1UECxMXR2xvYmFsU2lnbiBSb290IENBIC0gUjIxEzARBgNVBAoTCkdsb2JhbFNp\n" \
"Z24xEzARBgNVBAMTCkdsb2JhbFNpZ24wHhcNMDYxMjE1MDgwMDAwWhcNMjExMjE1\n" \
"MDgwMDAwWjBMMSAwHgYDVQQLExdHbG9iYWxTaWduIFJvb3QgQ0EgLSBSMjETMBEG\n" \
"A1UEChMKR2xvYmFsU2lnbjETMBEGA1UEAxMKR2xvYmFsU2lnbjCCASIwDQYJKoZI\n" \
"hvcNAQEBBQADggEPADCCAQoCggEBAKbPJA6+Lm8omUVCxKs+IVSbC9N/hHD6ErPL\n" \
"v4dfxn+G07IwXNb9rfF73OX4YJYJkhD10FPe+3t+c4isUoh7SqbKSaZeqKeMWhG8\n" \
"eoLrvozps6yWJQeXSpkqBy+0Hne/ig+1AnwblrjFuTosvNYSuetZfeLQBoZfXklq\n" \
"tTleiDTsvHgMCJiEbKjNS7SgfQx5TfC4LcshytVsW33hoCmEofnTlEnLJGKRILzd\n" \
"C9XZzPnqJworc5HGnRusyMvo4KD0L5CLTfuwNhv2GXqF4G3yYROIXJ/gkwpRl4pa\n" \
"zq+r1feqCapgvdzZX99yqWATXgAByUr6P6TqBwMhAo6CygPCm48CAwEAAaOBnDCB\n" \
"mTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUm+IH\n" \
"V2ccHsBqBt5ZtJot39wZhi4wNgYDVR0fBC8wLTAroCmgJ4YlaHR0cDovL2NybC5n\n" \
"bG9iYWxzaWduLm5ldC9yb290LXIyLmNybDAfBgNVHSMEGDAWgBSb4gdXZxwewGoG\n" \
"3lm0mi3f3BmGLjANBgkqhkiG9w0BAQUFAAOCAQEAmYFThxxol4aR7OBKuEQLq4Gs\n" \
"J0/WwbgcQ3izDJr86iw8bmEbTUsp9Z8FHSbBuOmDAGJFtqkIk7mpM0sYmsL4h4hO\n" \
"291xNBrBVNpGP+DTKqttVCL1OmLNIG+6KYnX3ZHu01yiPqFbQfXf5WRDLenVOavS\n" \
"ot+3i9DAgBkcRcAtjOj4LaR0VknFBbVPFd5uRHg5h6h+u/N5GJG79G+dwfCMNYxd\n" \
"AfvDbbnvRG15RjF+Cv6pgsH/76tuIMRQyV+dTZsXjAzlAcmgQWpzU/qlULRuJQ/7\n" \
"TBj0/VLZjmmx6BEP3ojY+x1J96relc8geMJgEtslQIxq/H5COEBkEveegeGTLg==\n" \
"-----END CERTIFICATE-----\n"; 

WiFiClientSecure client; /* initialize WIFI client */ 
String str;
String RxRSSI;

void setup() {
  Serial.begin(9600); /* initialize Serial Monitor */
  Serial.println("Started microcontroller.");
  //initialize WIFI connection
  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);
  Serial.print("Connecting to WIFI");
  int reset_counter_no_connection = 0; /* counter to reset microcontroller after failing to connect to WIFI */
  
  while (WiFi.status() != WL_CONNECTED) {
    if (reset_counter_no_connection < 25) {
      Serial.print(".");
      delay(500);
      reset_counter_no_connection++;
    } else {
      ESP.restart();
    }
  } 
  Serial.println("WIFI Connected!");
  SPI.begin(5, 19, 27, 18);
  LoRa.setPins(ss, rst, dio0);
  //Serial.println("WIFI connected and ready to go!");
  if (!LoRa.begin(868E6)) {
    Serial.println("Start of LoRa failed!");
    while (1);
  }

}

void loop() {
  
  int packetSize = LoRa.parsePacket();
  if (packetSize) {
    // received a packet
    Serial.print("Received packet '");
    // read packet
    while (LoRa.available()) {
      str = (char)LoRa.read();
      Serial.print(str);
      
    }
    
    // print RSSI of packet
    Serial.print("' with RSSI ");
    RxRSSI = LoRa.packetRssi();
    Serial.println(RxRSSI);
    sendData(str);
  }
}

void sendData(String params) {
   HTTPClient http;
   String url="https://script.google.com/macros/s/"+GOOGLE_SCRIPT_ID+"/exec?"+params;
   Serial.print(url);
   Serial.print("Making a request");
   http.begin(url, root_ca); //Specify the URL and certificate
   int httpCode = http.GET();  
   http.end();
   Serial.println(": done "+httpCode);
}

void parseReceivedString(String str) {
  
}
